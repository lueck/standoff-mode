## USAGE:
# java -jar rmlmapper-<VERSION>-all.jar -m rml4tcf.ttl -s turtle
#
# this will convert INPUT.tcf in the current directory

@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix : <http://github.com/lueck/standoff-mode/rml/tcf#> .
@prefix som: <http://github.com/lueck/standoff-mode/owl#> .
@prefix dsd: <http://www.dspin.de/data> .
@prefix dsm: <http://www.dspin.de/data/metadata> .
@prefix tcf: <http://www.dspin.de/data/textcorpus> .


:TextMap a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "INPUT.tcf" ; # TODO
        rml:referenceFormulation ql:XPath ;
        rml:iterator "//D-Spin/TextCorpus/text" ;
        ] .

:TextMap rr:subjectMap [
        rr:template "http://github.com/lueck/standoff-mode/annotation/INPUT"
        ] .

:TextMap rr:predicateObjectMap [
        rr:predicate som:text ;
        rr:objectMap [
            rml:reference "." ;
            ]
        ] .

:TokenMap a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "INPUT.tcf" ; # TODO
        rml:referenceFormulation ql:XPath ;
        rml:iterator "//D-Spin/TextCorpus/tokens/token" ;
        ] .

:TokenMap rr:subjectMap [
        rr:template "http://github.com/lueck/standoff-mode/annotation/INPUT/tokens/{@ID}"
        ] .

:TokenMap rr:predicateObjectMap [
        rr:predicate rdf:type ;
        rr:objectMap [
            rr:constant som:token
            ]
        ] .

:TokenMap rr:predicateObjectMap [
        rr:predicate som:inRange ;
        rr:objectMap [
            rr:template "http://github.com/lueck/standoff-mode/annotation/INPUT"
            ]
        ] .
        
:TokenMap rr:predicateObjectMap [
        rr:predicate som:index ;
        rr:objectMap [
            rml:reference "@ID"
            ]
        ] .

:TokenMap rr:predicateObjectMap [
        rr:predicate som:token ;
        rr:objectMap [
            rml:reference "." ;
            ]
        ] .

:TokenMap rr:predicateObjectMap [
        rr:predicate som:lemma2 ;
        rr:objectMap [
            rml:reference "following::lemma[@tokenIDs = self::token/@ID]"
            ]
        ] .
        

:TokenMap rr:predicateObjectMap [
        rr:predicate som:lemma ;
        rr:objectMap [
            #rml:reference "." ;
            rr:parentTriplesMap :LemmaMap ;
            rr:joinCondition [
                rr:parent "@ID" ;
                rr:child "@tokenIDs" ;
                ]
            ]
        ] .
        

:LemmaMap a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "INPUT.tcf" ; # TODO
        rml:referenceFormulation ql:XPath ;
        rml:iterator "//D-Spin/TextCorpus/lemmas/lemma" ;
        ] .

:LemmaMap rr:subjectMap [
        rr:template "http://github.com/lueck/standoff-mode/annotation/INPUT/tokens/{@tokenIDs}"
        ] .

:LemmaMap rr:predicateObjectMap [
        rr:predicate som:lemma ;
        rr:objectMap [
            rml:reference "." ;
            ]
        ] .


:PostagMap a rr:TriplesMap ;
    rml:logicalSource [
        rml:source "INPUT.tcf" ; # TODO
        rml:referenceFormulation ql:XPath ;
        rml:iterator "//D-Spin/TextCorpus/POStags/tag" ;
        ] .

:PostagMap rr:subjectMap [
        rr:template "http://github.com/lueck/standoff-mode/annotation/INPUT/tokens/{@tokenIDs}"
        ] .

:PostagMap rr:predicateObjectMap [
        rr:predicate som:postag ;
        rr:objectMap [
            rml:reference "." ;
            ]
        ] .

